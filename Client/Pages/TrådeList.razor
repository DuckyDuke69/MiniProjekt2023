@page "/trådelist"
@using global::Shared;
@inject ApiService ApiService

<h1>Threads</h1>

<ul>
    @if (trådes != null)
    {
        @foreach (var tråd in trådes)
        {
            <li>
                <div class="thread-item">
                    <strong>@tråd.Tråde_Overskrift</strong><br />
                    <p>@tråd.Tekst</p>
                    <p>Skrevet af: @tråd.bruger.Brugernavn</p>
                    <p>Upvotes: @tråd.Upvote</p>
                    <p>Downvotes: @tråd.Downvote</p>
                </div>
            </li>
        }
    }
    else
    {
        <p>Loading data...</p>
    }
</ul>

@code {
    private Tråde[] trådes;
    private string errorMessage;

    [Inject]
    private HttpClient Http { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            trådes = await ApiService.GetTrådesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "Kan ikke hente data";
            Console.WriteLine(ex);
        }
    }

    private void OpretTråd()
    {
        // Implement the thread creation logic here
    }

    public async Task HandleValidSubmit()
    {
        // This method will be called when the form is submitted.
        // Implement the logic to create a new thread here
    }
}
